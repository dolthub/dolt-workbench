name: Release dolt-workbench

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'SemVer format release tag, i.e. 0.24.5'
        required: true

jobs:
  format-version:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.format_version.outputs.version }}
    steps:
      - name: Format Input
        id: format_version
        run: |
          version="${{ github.event.inputs.version }}"
          if [[ $version == v* ]];
          then
            version="${version:1}"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

  create-release:
    needs: format-version
    name: Create release
    runs-on: ubuntu-22.04
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      release_version: ${{ needs.format-version.outputs.version }}
    steps:
      - name: Validate branch
        if: ${{ github.ref_name != 'main' }}
        run: |
          echo "This workflow can only run from 'main' (got '${{ github.ref_name }}')." >&2
          exit 1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update web/package.json version
        run: |
          yq -i '.version = "${{ needs.format-version.outputs.version }}"' web/package.json

      - name: Add and commit new version
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update web/package.json version to ${{ needs.format-version.outputs.version }} [skip ci]"
          new_branch: release/${{ needs.format-version.outputs.version }}

      - name: Raise PR and merge
        run: |
          gh pr create --base main --head release/${{ needs.format-version.outputs.version }} --title "Update web/package.json version to ${{ needs.format-version.outputs.version }}" --body "Increment version"
          gh pr merge --merge --delete-branch release/${{ needs.format-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: dolthub/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.format-version.outputs.version }}
          release_name: ${{ needs.format-version.outputs.version }}
          draft: false
          prerelease: false

  create-release-notes:
    name: Create release notes
    needs: create-release
    runs-on: ubuntu-22.04
    steps:
      - name: Trigger Release Notes
        uses: peter-evans/repository-dispatch@v2.0.0
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: release-notes
          client-payload: '{"version": "${{ needs.create-release.outputs.release_version }}", "release_id": "${{ needs.create-release.outputs.release_id }}"}'

  docker-image-push:
    needs: create-release
    runs-on: ubuntu-22.04
    steps:
      - name: Trigger Push Docker Image
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: push-docker-image
          client-payload: '{"version": "${{ needs.create-release.outputs.release_version }}"}'

  build-mas:
    needs: create-release
    uses: ./.github/workflows/cd-release-mas.yaml
    secrets: inherit
    with:
      release-version: ${{ needs.create-release.outputs.release_version }}

  build-dmg:
    needs: create-release
    uses: ./.github/workflows/cd-release-dmg.yaml
    secrets: inherit
    with:
      release-version: ${{ needs.create-release.outputs.release_version }}

  build-windows:
    needs: create-release
    uses: ./.github/workflows/cd-release-windows.yaml
    secrets: inherit
    with:
      release-version: ${{ needs.create-release.outputs.release_version }}

  build-linux:
    needs: create-release
    uses: ./.github/workflows/cd-release-linux.yaml
    secrets: inherit
    with:
      release-version: ${{ needs.create-release.outputs.release_version }}

